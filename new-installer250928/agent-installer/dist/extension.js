"use strict";var d=Object.create;var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var p=(n,o)=>{for(var e in o)a(n,e,{get:o[e],enumerable:!0})},l=(n,o,e,c)=>{if(o&&typeof o=="object"||typeof o=="function")for(let t of x(o))!m.call(n,t)&&t!==e&&a(n,t,{get:()=>o[t],enumerable:!(c=g(o,t))||c.enumerable});return n};var u=(n,o,e)=>(e=n!=null?d(b(n)):{},l(o||!n||!n.__esModule?a(e,"default",{value:n,enumerable:!0}):e,n)),k=n=>l(a({},"__esModule",{value:!0}),n);var E={};p(E,{activate:()=>f,deactivate:()=>v});module.exports=k(E);var s=u(require("vscode"));async function i(n){try{console.log(`Checking for extension ${n}...`);let o=s.extensions.getExtension(n);if(o){console.log(`Extension ${n} is installed.`);let e=o.packageJSON.version;console.log(`Current version: ${e}`),console.log("Checking for updates..."),await s.commands.executeCommand("workbench.extensions.checkForUpdates"),console.log("Update check completed")}else console.log(`Extension ${n} is not installed. Installing...`),await s.commands.executeCommand("workbench.extensions.installExtension",n),s.window.showInformationMessage(`${n} has been installed successfully!`);return!0}catch(o){return console.error(`Error installing/updating ${n}:`,o),!1}}async function r(){await i("Blackboxapp.blackboxagent")&&await i("Blackboxapp.blackbox")}function f(n){console.log("Blackbox AI Agent Installer is now active");let o=s.commands.registerCommand("agent-installer.installOrUpdate",()=>{r()});n.subscriptions.push(o),r()}function v(){}0&&(module.exports={activate,deactivate});
